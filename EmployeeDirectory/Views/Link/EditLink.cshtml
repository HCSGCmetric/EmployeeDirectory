@model EmployeeDirectory.Entity.LinkEntity
@using EmployeeDirectory.Helper



@{
    ViewBag.Title = "Edit Link";
}



<div class="container-fluid">

    @using (Html.BeginForm("EditLink", "Link", FormMethod.Post, new { ReturnUrl = ViewBag.ReturnUrl, @class = "validation-form-container  row-fluid form-horizontal", enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(true)
        <div class="row">
            <div class="col-md-12">
                <div class="box">
                    <div class="box-header" style="margin-bottom:20px;">
                        <h3 class="box-title">Edit Link</h3>
                    </div>
                    <div class="box-body">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="exampleInputEmail1" class="col-sm-2 control-label">Link Name<span class="field-validation-error">*</span></label>
                                <div class="col-sm-5">
                                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })

                                </div>
                                <div class="col-md-3 control-label error-allign">
                                    @Html.ValidationMessageFor(m => m.Name)

                                </div>
                            </div>
                            <div class="form-group">
                                <label for="exampleInputEmail1" class="col-sm-2 control-label">Link<span class="field-validation-error">*</span></label>
                                <div class="col-sm-5">
                                    @Html.TextBoxFor(m => m.Link, new { @class = "form-control" })

                                </div>
                                <div class="col-md-3 control-label error-allign">
                                    @Html.ValidationMessageFor(m => m.Link)

                                </div>
                            </div>
                            <div class="form-group">
                                <label for="exampleInputPassword1" class="col-sm-2 control-label">Description</label>
                                <div class="col-sm-5">

                                    @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
                                </div>
                                <div class="col-md-3 control-label error-allign">


                                </div>
                            </div>
                            <div class="form-group">
                                <label for="exampleInputFile" class="col-sm-2 control-label">Display IDs</label>
                                <div class="col-sm-5 control-label">
                                    @Html.DropDownListFor(m => m.LinkDisplayIDs, ViewBag.LinkDisplayList as List<SelectListItem>, new { @id = "ddlLinkDisplayList", @class = "form-control" })
                                </div>
                                <div class="col-md-3 control-label error-allign">
                                    @Html.ValidationMessageFor(m => m.LinkDisplayIDs)
                                </div>
                            </div>

                          
                            
                        </div>

                    </div>
                    <!-- /.box-body -->

                    <div class="footer-header">
                        <div class="col-xs-12">
                            @Html.HiddenFor(m => m.ID)
                            <div class="col-xs-4 pull-right">
                                <button type="submit" class="col-xs-6 btneffect pull-right ">Update</button>
                                <a title="" href="../../Link/LinkList" class="col-xs-6 btneffect pull-right ">Back</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>


<script type="text/javascript">


    //function demo1() {
    //    jsPDF.init();
    //    jsPDF.addPage();
    //    jsPDF.text(20, 20, 'Hello world!');
    //    jsPDF.text(20, 30, 'This is client-side Javascript, pumping out a PDF.');

    //    // Making Data URI
    //    var out = jsPDF.output();
    //    var url = 'data:application/pdf;base64,' + Base64.encode(out);

    //    Link.location.href = url;
    //}


    

    $(document).ready(function () {
       

        //$('#ddlUserTypeList').multiselect({
        //    numberDisplayed: 1,
        //    buttonWidth: '100%',
        //    maxHeight: 250,
        //    includeSelectAllOption: true,
        //});


        var selectedProject = '@Model.UserTypes'
        var selectedProjects = selectedProject.split(',');

        for (var i = 0; i < selectedProjects.length; i++) {
            //$("#ddlUserTypeList").closest('div').find('.dropdown-menu li').find('input[value=' + selectedProjects[i] + ']').click();

            $("#ddlUserTypeList").closest('div').find('.dropdown-menu li').find('label').filter(function () {
                return $(this).text().trim() === selectedProjects[i].trim();
            }).click();

            //if ($("#ddlUserTypeList").closest('div').find('.dropdown-menu li').find('label').text().trim() === selectedProjects[i].trim())
            //$("#ddlUserTypeList").closest('div').find('.dropdown-menu li').find('label:contains(' + selectedProjects[i].trim() + ')').click();
        }


    });


</script>


